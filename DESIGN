- Room is created
- - Start game, return game ID to client

- Players join
- - Player browser knows game type
- - Send PLAYER JOINED event w/ player information



Shoot The Messenger

- - Players start listening on stm.PlayerStream

- Apple TV starts game
- Call stm.BeginGame
- Receive prompts

- Players receive prompts from PlayerStream

- A user is selected as guesser
- - Server assigns guesser, sends PlayerFrame w/ who is guesser
- - Server sends PlayerFrame with GameState 'RESPONDING'

- Server sends PromptResponseInputFrame to everyone + apple tv

- A prompt is shown on apple TV
- - Apple TV sends PromptResponseInputFrame
 TO SERVER
- - Server sends PromptResponseInputFrame to ALL PLAYERS

- Game shows if user has answered
- - Send PromptResponseFrame to Apple TV

- After each player has answered, server checks if all players did answer
- Send RoleFrame to guesser + Apple TV

- When Apple TV receives GameState = 'READING', begin reading sequence

- When guesser receives RoleFrame (with guesser ID) and GameState = 'READING', begin reading sequence
- - Receives all responses in AllResponsesFrame

- Guesser browser displays one response at a time
- - Sends response displayed to Apple TV via ReadResponseFrame

- Guesser continues swiping through responses
- - Sends response displayed to Apple TV via ReadResponseFrame

- Once all responeses swiped through, show new interface on browser and apple tv
- - Server sends GameState = 'GUESSING' to Apple TV and all clients

- Guesser guesses who responded to what
- - Send GuessFrame to server
- - server verifies guess

- If guess is right, show UI on apple TV. User who was guessed is out, award point to guesser
- - Send ADD POINT event for guesser
- - (TODO: implement points)

- If guess is wrong, show UI on apple TV, new user becomes guesser, continues guessing current set of responses
- - Send RoleFrame with original guesser out
- - Send RoleFrame with new guesser ID
- - Send AllResponsesFrame with remaining responses

- If all guesses are correct, game / round is over. Display current score
- - Send GameState = 'RESULTS' + current score

- If all users are failures,  game / round is over. Display current score
- - Send END ROUND + current score
